name: Build and Publish Docker Image - MASTER

on:
  push:
    branches: [master]
  workflow_dispatch:

env:
  APP_NAME: trading-journal-entry
  NAMESPACE: trading-journal
  CONTEXT: trading-journal

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      app-version: ${{ steps.build-version.outputs.APP_VERSION }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'
      - name: Build with Maven
        env:
          PASSWORD: ${{ secrets.PACKAGE_TOKEN }}
        run: |
          mvn -B clean package --file pom.xml --settings settings.xml
          echo "APP_VERSION=$(mvn --file pom.xml --settings settings.xml  -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)" >> "$GITHUB_OUTPUT"
        id: build-version
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: $APP_NAME
          path: target/*.jar
      - name: Create Tag
        uses: negz/create-tag@v1
        with:
          version: ${{ steps.build-version.outputs.APP_VERSION }}
          token: ${{ secrets.PACKAGE_TOKEN }}

  docker:
    name: Docker Build and Push
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'
      - name: Download Artifact
        uses: actions/download-artifact@v3
        with:
          name: $APP_NAME
          path: target
      - name: Docker Login
        run: echo ${{ secrets.DOCKER_PASS }} | docker login -u ${{ secrets.DOCKER_USER }} --password-stdin
      - name: Docker Build Version PRD
        run: docker build -t allanweber/$APP_NAME:${{needs.build.outputs.app-version}} -f docker/Dockerfile .
      - name: Build and Push Version
        run: docker push allanweber/$APP_NAME:${{needs.build.outputs.app-version}}
      - name: Docker Build Latest
        run: docker build -t allanweber/$APP_NAME:latest -f docker/Dockerfile .
      - name: Docker Push Latest
        run: docker push allanweber/$APP_NAME:latest
      - name: Delete Artifact
        uses: geekyeggo/delete-artifact@v2
        with:
          name: $APP_NAME

  deploy:
    name: Deploy on PRD
    runs-on: ubuntu-latest
    needs: [build, docker]
    steps:
      - name: Deploy Image
        uses: actions-hub/kubectl@master
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
          KUBE_CONTEXT: ${{ env.CONTEXT }}
        with:
          args: set image deployment ${{ env.APP_NAME }} ${{ env.APP_NAME }}=allanweber/${{ env.APP_NAME }}:${{needs.build.outputs.app-version}} -n ${{ env.NAMESPACE }} --record=true
      - name: Check Image Rollout
        uses: actions-hub/kubectl@master
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
          KUBE_CONTEXT: ${{ env.CONTEXT }}
        with:
          args: rollout status deployment/${{ env.APP_NAME }} -n ${{ env.NAMESPACE }}
